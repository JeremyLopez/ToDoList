@import url(http://fonts.googleapis.com/css?family=Lato:300,400,700);

$color: #25DBFF;
$textColor: white;//#858585;
$boxColor: red;
$taskContainerHeight: 480px;


.test-div {
	height: 100px;
}






#makeMeDraggable {
	width: 300px; 
	height: 300px; 
	background: $boxColor;
	
	&.ui-draggable-dragging {
		background: transparentize($boxColor, 0.5);		
	}
}

#drag-here {
	width: 300px;
	height: 300px;
	margin-top: 100px;
	display: inline-block;
	background: black;
}

.hovered {
	background: white;
}

.sort-these {
	display: block;
	margin: 100px;
}

.sort-test {
	padding: 0;
}






html {
	background-color: $color;
}

input {
	background-color: lighten($color, 20%);
	padding-right: 0px;
	padding-left: 0px;
	margin-bottom: 5px;
//	border: solid black 2px;
	border: none;
	color: black;
	outline: none;
	border-radius: 7px;
	&:focus {
//		border: solid black 4px;
		outline: none;
//		line-height: 2;
	}
}

.svg-hide {
//	display: none;
	visibility: hidden;
}

.svg-visible {
	visibility: visible;
}

#squiggle {
	position: relative;
	width: 50px;
	height: 50px;
	display: inline-block;
	float: left;
	margin: 0 0 0 50px;
	border: solid white;
	border-radius: 50px;
	cursor: pointer;
}

svg { 
	postion: absolute; 
	stroke: $textColor;
}

.btn-success {
	border-radius: 7px;
	border: none;
	background-color: complement($color);
	
	&:hover {
		background-color: darken((complement($color)), 10%);
	}
	
	&:active {
		background-color: darken((complement($color)), 10%);
		outline: none;
	}
	
	&:focus {
		background-color: darken((complement($color)), 10%);
		outline: none;
	}
	
	&:active:focus {
		background-color: darken((complement($color)), 20%);
		outline: none;
	}
}

body {
	font-size: 20px;
	font-family: 'Lato';
	max-width: 1000px;
	margin: auto;
	background-color: $color;
}

i {
	cursor: pointer;
}

.section {
	height: $taskContainerHeight / 8;
//		background: green;
	position: absolute;
	width: 5%;
	z-index: 10;
	border: 1px black;
	border-style: solid none solid none
}

#slot-0 {
	border-top: 2px black;
	border-bottom: 1px black;
	border-style: solid none solid none
}

#slot-7 {
	border-top: 1px black;
	border-bottom: 2px black;
	border-style: solid none solid none
}


.task-container {
	margin: 0px;
	height: $taskContainerHeight;
//	background: white;
	
	> .section {
		height: $taskContainerHeight / 8;
		background: green;
		position: absolute;
		width: 800px;
		z-index: 10;
	}
}

.task-info {
	display: inline;
	float: right;
	clear: none;
	height: 68px;
	margin: 0 -265px 0 0;
	line-height: 17px;
	
	> p {
		font-size: 10px;
		display: inline-block;
		margin: 0;
	}
}

.btn-success {
	display: block;
}

.strike-it {
	text-decoration: line-through;
}

form {
	margin: 10px 0px 0px 0px;
	> button {
		margin: inherit;
	}
}

ul {
	list-style: none;
}

li {
//	display: inline;
//	padding-bottom: 10px;
}

.post-container {
//	padding: 20px 20px;
//	border: solid green 3px;
//	margin-bottom: 10px;
	background-color: darken($color, 10%);
	border-radius: 10px;
	display: flex;
	align-items: center;
	justify-content: space-between;
	z-index: 100;
//	border: 1px solid white;
	
	> h3 {
		display: inline;
		color: $textColor;
	}
	
	> p {
		display: inline;
		font-size: 0.5em;
	}
}

.task-list-area {
	padding: 0;
}

@for $i from 0 through 10 {
	$num: 30 - ( 2 * $i );
  .complete-#{$i} { background-color: darken($color, $num) }
}

@for $i from 1 through 16 {
//  .hours-#{$i} { padding: 10px*$i 0px 10px*$i 0px }
	.hours-#{$i} { height: 30px*$i; line-height: 30px*$i }
}

@for $i from 0 through 7 {
//  .hours-#{$i} { padding: 10px*$i 0px 10px*$i 0px }
	#slot-#{$i} { top: 141px + ( ( $taskContainerHeight / 8 ) * $i ); line-height: 60px }
}